import java.sql.*;
import com.google.gson.*;

public class SongShopSaver {
    private static final String DB_URL = "jdbc:mysql://localhost:3306/SongShop";
    private static final String USER = "root";
    private static final String PASS = "YOUR_PASSWORD";

    public static void saveTracks(JsonArray tracks) throws SQLException {
        Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
        conn.setAutoCommit(false);

        String insertGenre = "INSERT INTO Genre (genreName) VALUES (?) ON DUPLICATE KEY UPDATE genreName=VALUES(genreName)";
        String insertArtist = "INSERT INTO Artist (artistId, artistName, genreId) VALUES (?, ?, ?) " +
                              "ON DUPLICATE KEY UPDATE artistName=VALUES(artistName)";
        String insertSong = "INSERT INTO Song (songId, songTitle, artistId, genreId) VALUES (?, ?, ?, ?) " +
                            "ON DUPLICATE KEY UPDATE songTitle=VALUES(songTitle)";

        PreparedStatement genreStmt = conn.prepareStatement(insertGenre, Statement.RETURN_GENERATED_KEYS);
        PreparedStatement artistStmt = conn.prepareStatement(insertArtist);
        PreparedStatement songStmt = conn.prepareStatement(insertSong);

        for (JsonElement e : tracks) {
            JsonObject track = e.getAsJsonObject();
            JsonObject artistObj = track.getAsJsonArray("artists").get(0).getAsJsonObject();
            JsonObject album = track.getAsJsonObject("album");

            // Genre mapping (Spotify gives multiple, use first)
            String genreName = "Unknown";
            if (artistObj.has("genres")) {
                JsonArray genres = artistObj.getAsJsonArray("genres");
                if (genres.size() > 0) genreName = genres.get(0).getAsString();
            }

            // Insert or find genre
            genreStmt.setString(1, genreName);
            genreStmt.executeUpdate();
            int genreId = getGenreId(conn, genreName);

            // Insert artist
            int artistId = artistObj.get("id").getAsString().hashCode(); // convert string ID to int safely
            artistStmt.setInt(1, artistId);
            artistStmt.setString(2, artistObj.get("name").getAsString());
            artistStmt.setInt(3, genreId);
            artistStmt.executeUpdate();

            // Insert song
            int songId = track.get("id").getAsString().hashCode();
            songStmt.setInt(1, songId);
            songStmt.setString(2, track.get("name").getAsString());
            songStmt.setInt(3, artistId);
            songStmt.setInt(4, genreId);
            songStmt.executeUpdate();
        }

        conn.commit();
        conn.close();
    }

    private static int getGenreId(Connection conn, String genreName) throws SQLException {
        PreparedStatement stmt = conn.prepareStatement("SELECT genreId FROM Genre WHERE genreName = ?");
        stmt.setString(1, genreName);
        ResultSet rs = stmt.executeQuery();
        if (rs.next()) return rs.getInt("genreId");
        return 0;
    }
}
